{"ast":null,"code":"var _jsxFileName = \"/Users/jk/Documents/GitHub/faucet/src/App.js\";\nimport React, { Component } from 'react';\nimport { useCallback, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { async, ninvoke } from 'q';\nimport Web3 from \"web3\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { loadContract } from \"./utils/load-contract\";\n\nfunction App() {\n  const [web3Api, setWeb3Api] = useState({\n    provider: null,\n    isProviderLoaded: false,\n    web3: null,\n    contract: null\n  });\n  const [balance, setBallance] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [shouldReload, reload] = useState(false);\n  const canConnectToContract = account && web3Api.contract;\n  const reloadEffect = useCallback(() => reload(!shouldReload), [shouldReload]);\n\n  const setAccountListener = provider => {\n    provider.on(\"accountsChanged\", _ => window.location.reload());\n    provider.on(\"chainChanged\", _ => window.location.reload());\n  };\n\n  useEffect(() => {\n    const loadProvider = async () => {\n      const provider = await detectEthereumProvider();\n\n      if (provider) {\n        const contract = await loadContract(\"Faucet\", provider);\n        setAccountListener(provider);\n        setWeb3Api({\n          web3: new Web3(provider),\n          provider,\n          contract,\n          isProviderLoaded: true\n        });\n      } else {\n        setWeb3Api(api => ({ ...api,\n          isProviderLoaded: true\n        }));\n        console.error(\"Please, install Metamask.\");\n      }\n    };\n\n    loadProvider();\n  }, []);\n  useEffect(() => {\n    const loadBalance = async () => {\n      const {\n        contract,\n        web3\n      } = web3Api;\n      const balance = await web3.eth.getBalance(contract.address);\n      setBallance(web3.utils.fromWei(balance, \"ether\"));\n    };\n\n    web3Api.contract && loadBalance();\n  }, [web3Api, shouldReload]);\n  useEffect(() => {\n    const getAccount = async () => {\n      const accounts = await web3Api.web3.eth.getAccounts();\n      setAccount(accounts[0]);\n    };\n\n    web3Api.web3 && getAccount();\n  }, [web3Api.web3]);\n  const addFunds = useCallback(async () => {\n    const {\n      contract,\n      web3\n    } = web3Api;\n    await contract.addFunds({\n      from: account,\n      value: web3.utils.toWei(\"1\", \"ether\")\n    });\n    reloadEffect();\n  }, [web3Api, account, reloadEffect]);\n\n  const withdraw = async () => {\n    const {\n      contract,\n      web3\n    } = web3Api;\n    const withdrawAmount = web3.utils.toWei(\"0.1\", \"ether\");\n    await contract.withdraw(withdrawAmount, {\n      from: account\n    });\n    reloadEffect();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"faucet-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"faucet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, web3Api.isProviderLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"is-flex is-align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Account: \")), account ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, account) : !web3Api.provider ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notification is-warning is-size-6 is-rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, \"Wallet is not detected!\", ` `, /*#__PURE__*/React.createElement(\"a\", {\n    rel: \"noreferrer\",\n    target: \"_blank\",\n    href: \"https://docs.metamask.io\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 23\n    }\n  }, \"Install Metamask\"))) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-small\",\n    onClick: () => web3Api.provider.request({\n      method: \"eth_requestAccounts\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, \"Connect Wallet\")) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Looking for Web3...\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"balance-view is-size-2 my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Current Balance: \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 30\n    }\n  }, balance), \" ETH\"), !canConnectToContract && /*#__PURE__*/React.createElement(\"i\", {\n    className: \"is-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Connect to Ganache\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: !canConnectToContract,\n    onClick: addFunds,\n    className: \"button is-link mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Donate 1 eth\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: !canConnectToContract,\n    onClick: withdraw,\n    className: \"button is-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, \"Withdraw 0.1 eth\"))));\n}\n\nexport default App; // function App() {\n//   const [web3Api, setWeb3Api] = useState({\n//     provider: null,\n//     web3: null,\n//     contract: null\n//   })\n//   const [balance, setBalance] = useState(null)\n//   const [account, setAccount] = useState(null)\n//   useEffect(() => {\n//     const loadProvider = async () => {\n//       const provider = await detectEthereumProvider()\n//       const contract = await loadContract(\"Faucet\", provider)\n//       if (provider) {\n//         // provider.request({method: \"eth_requestAccounts\"})\n//         setWeb3Api({\n//           web3: new Web3(provider),\n//           provider\n//         })\n//       } else {\n//         console.error(\"Please, install Metamask\")\n//       }\n//       // if (window.ethereum) {\n//       //   provider = window.ethereum;\n//       //   try {\n//       //     await provider.request({method: \"eth_requestAccounts\"});\n//       //   } catch {\n//       //     console.error(\"User denied accounts access!\")\n//       //   }\n//       // } else if (window.web3) {\n//       //   provider = window.web3.currentProvider\n//       // } else if (!process.env.production) {\n//       //   provider = new Web3.providers.HttpProvider(\"http://localhost:7545\")\n//       // }\n//       // setWeb3Api({\n//       //   web3: new Web3(provider),\n//       //   provider\n//       // })\n//       // with metamask we haev an access to window.ethereum & to window.web3\n//       // metamask injects a global API into website\n//       // this API allows websites to request users, accounts, read data to blockchain,\n//       // sign messages and transactions\n//       // console.log(window.web3)\n//       // console.log(window.ethereum)\n//     }\n//     loadProvider()\n//   }, [])\n//   useEffect(() => {\n//     const loadBalance = async () => {\n//       const { contract, web3 } = web3Api\n//       const balance = await web3.eth.getBalance(contract.address)\n//       setBalance(web3.utils.fromWei(balance, \"ether\"))\n//     }\n//     web3Api.contract && loadBalance()\n//   }, [web3Api])\n//   useEffect(() => {\n//     const getAccount = async () => {\n//       const accounts = await web3Api.web3.eth.getAccounts()\n//       setAccount(accounts[0])\n//     }\n//    web3Api.web3 && getAccount()\n//   }, [web3Api.web3])\n//   const addFunds = async () => {\n//     const { contract, web3 } = web3Api\n//     await contract.addFunds({\n//       from: account,\n//       value: web3.utils.toWei(\"1\", \"ether\")\n//     })\n//   }\n//   return (\n//     <>\n//       <div className=\"faucet-wrapper\">\n//         <div className=\"faucet\">\n//         <div className=\"is-flex is-align-items-center\">\n//           <span>\n//             <strong className=\"mr-2\">Account: </strong>\n//           </span>\n//             { account ?\n//               <div>{account}</div>:\n//               <button\n//                 className=\"button is-small\"\n//                 onClick={() => web3Api.provider.request({method: \"eth_requestAccounts\"})}\n//               >\n//                 Connect Wallet\n//               </button> \n//             }\n//           </div>\n//           <div className=\"balance-view is-size-2 my-4\">\n//             Current Balance: <strong>{balance}</strong> ETH\n//           </div>\n//           {/* <button \n//             className=\"btn mr-2\"\n//             onClick={async () => {\n//               const accounts = await window.ethereum.request({method: \"eth_requestAccounts\"})\n//               console.log(accounts)\n//             }}\n//           >\n//             Enable Ethereum\n//           </button> */}\n//           <button \n//           onClick={addFunds} \n//           className=\"button is-link mr-2\">\n//             Donate 1 eth\n//           </button>\n//           <button className=\"button is-primary\">Withdraw</button>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n// export default App;","map":{"version":3,"sources":["/Users/jk/Documents/GitHub/faucet/src/App.js"],"names":["React","Component","useCallback","useEffect","useState","async","ninvoke","Web3","detectEthereumProvider","loadContract","App","web3Api","setWeb3Api","provider","isProviderLoaded","web3","contract","balance","setBallance","account","setAccount","shouldReload","reload","canConnectToContract","reloadEffect","setAccountListener","on","_","window","location","loadProvider","api","console","error","loadBalance","eth","getBalance","address","utils","fromWei","getAccount","accounts","getAccounts","addFunds","from","value","toWei","withdraw","withdrawAmount","request","method"],"mappings":"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":["import React, { Component }  from 'react';\nimport { useCallback, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { async, ninvoke } from 'q';\nimport Web3 from \"web3\";\nimport detectEthereumProvider from '@metamask/detect-provider'\nimport { loadContract } from \"./utils/load-contract\";\n\n\nfunction App() {\n  const [web3Api, setWeb3Api] = useState({\n    provider: null,\n    isProviderLoaded: false,\n    web3: null,\n    contract: null\n  })\n\n  const [balance, setBallance] = useState(null)\n  const [account, setAccount] = useState(null)\n  const [shouldReload, reload] = useState(false)\n\n  const canConnectToContract = account && web3Api.contract\n  const reloadEffect = useCallback(() => reload(!shouldReload), [shouldReload])\n\n  const setAccountListener = provider => {\n    provider.on(\"accountsChanged\", _ => window.location.reload())\n    provider.on(\"chainChanged\", _ => window.location.reload())\n  }\n\n  useEffect(() => {\n    const loadProvider = async () => {\n      const provider = await detectEthereumProvider()\n\n      if (provider) {\n        const contract = await loadContract(\"Faucet\", provider)\n        setAccountListener(provider)\n        setWeb3Api({\n          web3: new Web3(provider),\n          provider,\n          contract,\n          isProviderLoaded: true\n        })\n      } else {\n        setWeb3Api(api => ({...api, isProviderLoaded: true}))\n        console.error(\"Please, install Metamask.\")\n      }\n    }\n\n    loadProvider()\n  }, [])\n\n  useEffect(() => {\n    const loadBalance = async () => {\n      const { contract, web3 } = web3Api\n      const balance = await web3.eth.getBalance(contract.address)\n      setBallance(web3.utils.fromWei(balance, \"ether\"))\n    }\n\n    web3Api.contract && loadBalance()\n  }, [web3Api, shouldReload])\n\n  useEffect(() => {\n    const getAccount = async () => {\n      const accounts = await web3Api.web3.eth.getAccounts()\n      setAccount(accounts[0])\n    }\n\n    web3Api.web3 && getAccount()\n  }, [web3Api.web3])\n\n  const addFunds = useCallback(async () => {\n    const { contract, web3 } = web3Api\n    await contract.addFunds({\n      from: account,\n      value: web3.utils.toWei(\"1\", \"ether\")\n    })\n\n    reloadEffect()\n  }, [web3Api, account, reloadEffect])\n\n  const withdraw = async () => {\n    const { contract, web3 } = web3Api\n    const withdrawAmount = web3.utils.toWei(\"0.1\", \"ether\")\n    await contract.withdraw(withdrawAmount, {\n      from: account\n    })\n    reloadEffect()\n  }\n\n  return (\n    <>\n      <div className=\"faucet-wrapper\">\n        <div className=\"faucet\">\n          { web3Api.isProviderLoaded ?\n            <div className=\"is-flex is-align-items-center\">\n              <span>\n                <strong className=\"mr-2\">Account: </strong>\n              </span>\n                { account ?\n                  <div>{account}</div> :\n                  !web3Api.provider ?\n                  <>\n                    <div className=\"notification is-warning is-size-6 is-rounded\">\n                      Wallet is not detected!{` `}\n                      <a\n                        rel=\"noreferrer\"\n                        target=\"_blank\"\n                        href=\"https://docs.metamask.io\">\n                        Install Metamask\n                      </a>\n                    </div>\n                  </> :\n                  <button\n                    className=\"button is-small\"\n                    onClick={() =>\n                      web3Api.provider.request({method: \"eth_requestAccounts\"}\n                    )}\n                  >\n                    Connect Wallet\n                  </button>\n                }\n            </div> :\n            <span>Looking for Web3...</span>\n          }\n          <div className=\"balance-view is-size-2 my-4\">\n            Current Balance: <strong>{balance}</strong> ETH\n          </div>\n          { !canConnectToContract &&\n            <i className=\"is-block\">\n              Connect to Ganache\n            </i>\n          }\n          <button\n            disabled={!canConnectToContract}\n            onClick={addFunds}\n            className=\"button is-link mr-2\">\n              Donate 1 eth\n            </button>\n          <button\n            disabled={!canConnectToContract}\n            onClick={withdraw}\n            className=\"button is-primary\">Withdraw 0.1 eth</button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n// function App() {\n//   const [web3Api, setWeb3Api] = useState({\n//     provider: null,\n//     web3: null,\n//     contract: null\n//   })\n\n//   const [balance, setBalance] = useState(null)\n//   const [account, setAccount] = useState(null)\n\n//   useEffect(() => {\n//     const loadProvider = async () => {\n//       const provider = await detectEthereumProvider()\n//       const contract = await loadContract(\"Faucet\", provider)\n\n//       if (provider) {\n//         // provider.request({method: \"eth_requestAccounts\"})\n//         setWeb3Api({\n//           web3: new Web3(provider),\n//           provider\n//         })\n//       } else {\n//         console.error(\"Please, install Metamask\")\n//       }\n\n//       // if (window.ethereum) {\n//       //   provider = window.ethereum;\n\n//       //   try {\n//       //     await provider.request({method: \"eth_requestAccounts\"});\n//       //   } catch {\n//       //     console.error(\"User denied accounts access!\")\n//       //   }\n//       // } else if (window.web3) {\n//       //   provider = window.web3.currentProvider\n//       // } else if (!process.env.production) {\n//       //   provider = new Web3.providers.HttpProvider(\"http://localhost:7545\")\n//       // }\n\n//       // setWeb3Api({\n//       //   web3: new Web3(provider),\n//       //   provider\n//       // })\n\n//       // with metamask we haev an access to window.ethereum & to window.web3\n//       // metamask injects a global API into website\n//       // this API allows websites to request users, accounts, read data to blockchain,\n//       // sign messages and transactions\n\n//       // console.log(window.web3)\n//       // console.log(window.ethereum)\n//     }\n\n//     loadProvider()\n//   }, [])\n\n//   useEffect(() => {\n//     const loadBalance = async () => {\n//       const { contract, web3 } = web3Api\n//       const balance = await web3.eth.getBalance(contract.address)\n//       setBalance(web3.utils.fromWei(balance, \"ether\"))\n//     }\n//     web3Api.contract && loadBalance()\n//   }, [web3Api])\n\n//   useEffect(() => {\n//     const getAccount = async () => {\n//       const accounts = await web3Api.web3.eth.getAccounts()\n//       setAccount(accounts[0])\n//     }\n\n//    web3Api.web3 && getAccount()\n//   }, [web3Api.web3])\n\n//   const addFunds = async () => {\n//     const { contract, web3 } = web3Api\n//     await contract.addFunds({\n//       from: account,\n//       value: web3.utils.toWei(\"1\", \"ether\")\n//     })\n//   }\n\n//   return (\n//     <>\n//       <div className=\"faucet-wrapper\">\n//         <div className=\"faucet\">\n//         <div className=\"is-flex is-align-items-center\">\n//           <span>\n//             <strong className=\"mr-2\">Account: </strong>\n//           </span>\n//             { account ?\n//               <div>{account}</div>:\n//               <button\n//                 className=\"button is-small\"\n//                 onClick={() => web3Api.provider.request({method: \"eth_requestAccounts\"})}\n//               >\n//                 Connect Wallet\n//               </button> \n//             }\n//           </div>\n//           <div className=\"balance-view is-size-2 my-4\">\n//             Current Balance: <strong>{balance}</strong> ETH\n//           </div>\n//           {/* <button \n//             className=\"btn mr-2\"\n//             onClick={async () => {\n//               const accounts = await window.ethereum.request({method: \"eth_requestAccounts\"})\n//               console.log(accounts)\n//             }}\n//           >\n//             Enable Ethereum\n//           </button> */}\n//           <button \n//           onClick={addFunds} \n//           className=\"button is-link mr-2\">\n//             Donate 1 eth\n//           </button>\n//           <button className=\"button is-primary\">Withdraw</button>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default App;"]},"metadata":{},"sourceType":"module"}